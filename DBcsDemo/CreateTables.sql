CREATE TABLE IF NOT EXISTS public.categories
(
    id         integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name       text    NOT NULL,
    is_deleted boolean NOT NULL,
    CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE UNIQUE INDEX IF NOT EXISTS ix_categories_id
    ON public.categories
        (id ASC NULLS LAST);

CREATE TABLE IF NOT EXISTS public.authors
(
    id         integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name       text    NOT NULL,
    is_deleted boolean NOT NULL,
    CONSTRAINT pk_authors PRIMARY KEY (id)
);

CREATE UNIQUE INDEX IF NOT EXISTS ix_authors_id
    ON public.authors
        (id ASC NULLS LAST);


CREATE TABLE IF NOT EXISTS public.questions
(
    id                integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    difficulty        integer NOT NULL,
    category_id       integer NOT NULL,
    author_id         integer  NULL,
    question          text    NOT NULL,
    correct_answer    text    NOT NULL,
    incorrect_answers text[]  NOT NULL,
    is_deleted        boolean NOT NULL,

    CONSTRAINT pk_questions PRIMARY KEY (id),
    CONSTRAINT fk_questions_categories_category_id FOREIGN KEY (category_id)
        REFERENCES public.categories (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
   CONSTRAINT fk_questions_authors_author_id FOREIGN KEY (author_id)
        REFERENCES public.authors (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE

);

CREATE UNIQUE INDEX IF NOT EXISTS ix_questions_id
    ON public.questions
        (id ASC NULLS LAST);

CREATE INDEX IF NOT EXISTS ix_questions_category_id
    ON public.questions
        (category_id ASC NULLS LAST);
 

 CREATE TABLE IF NOT EXISTS public.quizzes
(
    id         integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name       text    NOT NULL,
    avalaible_from  timestamp with time zone NOT NULL,
    avalaibilty_end timestamp with time zone NULL,
    author_id         integer  NULL,
    CONSTRAINT pk_quizzes PRIMARY KEY (id),
    CONSTRAINT fk_quizzes_authors_author_id FOREIGN KEY (author_id)
        REFERENCES public.authors (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);
CREATE UNIQUE INDEX IF NOT EXISTS ix_quizzes_id
    ON public.quizzes
        (id ASC NULLS LAST);


CREATE TABLE IF NOT EXISTS public.quizzes_questions
(
    id         integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    quiz_id      int    NOT NULL,
    question_id  int    NOT NULL,
    CONSTRAINT pk_quizzes_questions PRIMARY KEY (id),
    CONSTRAINT fk_quizzes_questions_questions_question_id FOREIGN KEY (question_id)
    REFERENCES public.questions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE,
    CONSTRAINT fk_quizzes_questions_questions_quiz_id FOREIGN KEY (quiz_id)
    REFERENCES public.quizzes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE

);
CREATE UNIQUE INDEX IF NOT EXISTS ix_quizzes_questions_id
    ON public.quizzes_questions
        (id ASC NULLS LAST);